
<div id="remote-media"></div>
  <div id="controls">
    <div id="preview">
      <div id="local-media"></div>
    </div>

    <div id="room-controls">
      <p class="instructions">Room Name:</p>
      <input id="room-name" type="text" placeholder="Enter a room name" />
		<div class="join-call">
			<button class="video">
				<?= $block->escapeHtml(__('Join Call: ')) ?>
			</button>
		</div>
      <!--<button id="button-leave">Leave Room</button>-->
    </div>

    <div id="log"></div>
  </div>

<script>
require(['jquery','twilio'], function ($,twilio) {
		const Video = twilio;	
		$(document).ready(function(){
			$(".join-call .video").on("click", function(){

													Video.connect('eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJqdGkiOiJTSzg2MTliZWMzNjA4OTA5OWFmOTJiZTE0MGM4NTAyMjkyLTE2NDEyOTIxMTEiLCJpc3MiOiJTSzg2MTliZWMzNjA4OTA5OWFmOTJiZTE0MGM4NTAyMjkyIiwic3ViIjoiQUM4NDY4ODlkYjk3MDY2NWE5MzY1YmJkNmRiY2M5NDQ5YiIsImV4cCI6MTY0MTI5MjQxMSwiZ3JhbnRzIjp7ImlkZW50aXR5IjoiaWRlbnRpdHkxNzQ3MjgwMjI4IiwidmlkZW8iOnsicm9vbSI6Ik5ld1Rlc3RSb29tMzI5NjU2NTQ3OSJ9fX0.loKzYWKnPBZ4bYp2iL8bm8eOXDtwPzbTvwp5SEg40Yc', { name: 'NewTestRoom3296565479' }).then(room => {
							console.log(room);
							videoRoom = room;
							roomJoined(room);
								previewCamera();
							  room.participants.forEach(participantConnected);
							  room.on('participantConnected', participantConnected);

							  room.on('participantDisconnected', participantDisconnected);
							  room.once('disconnected', error => room.participants.forEach(participantDisconnect));
						});
			});
		  
		  
			function participantConnected(participant) {
			  console.log('Participant "%s" connected', participant.identity);

			  const div = document.createElement('div');
			  div.id = participant.sid;
			  div.innerText = participant.identity;

			  participant.on('trackSubscribed', track => trackSubscribed(div, track));
			  participant.on('trackUnsubscribed', trackUnsubscribed);

			  participant.tracks.forEach(publication => {
				if (publication.isSubscribed) {
				  trackSubscribed(div, publication.track);
				}
			  });

			  document.body.appendChild(div);
			}

			function participantDisconnected(participant) {
			  console.log('Participant "%s" disconnected', participant.identity);
			  document.getElementById(participant.sid).remove();
			}

			function trackSubscribed(div, track) {
			  div.appendChild(track.attach());
			}

			function trackUnsubscribed(track) {
			  track.detach().forEach(element => element.remove());
			}




		var activeRoom;
		var previewTracks;
		var identity = 788929792;
		var roomName;

		function attachTracks(tracks, container) {
		  tracks.forEach(function(track) {
			container.appendChild(track.attach());
		  });
		}

		function attachParticipantTracks(participant, container) {
		  var tracks = Array.from(participant.tracks.values());
		  attachTracks(tracks, container);
		}

		function detachTracks(tracks) {
		  tracks.forEach(function(track) {
			track.detach().forEach(function(detachedElement) {
			  detachedElement.remove();
			});
		  });
		}

		function detachParticipantTracks(participant) {
		  var tracks = Array.from(participant.tracks.values());
		  detachTracks(tracks);
		}
		function previewCamera(){
			var localTracksPromise = previewTracks
			? Promise.resolve(previewTracks)
			:  Video.createLocalTracks();

			localTracksPromise.then(function(tracks) {
				previewTracks = tracks;
				var previewContainer = document.getElementById('local-media');
				if (!previewContainer.querySelector('video')) {
					attachTracks(tracks, previewContainer);
				}
			}, function(error) {
				console.error('Unable to access local media', error);
			});
		}
		function roomJoined(room) {

		  activeRoom = room;

		  alert("Joined as '" + identity + "'");
		  document.getElementById('button-join').style.display = 'none';
		  document.getElementById('button-leave').style.display = 'inline';

		  // Draw local video, if not already previewing
		  var previewContainer = document.getElementById('local-media');
		  if (!previewContainer.querySelector('video')) {
			attachParticipantTracks(room.localParticipant, previewContainer);
		  }

		  room.participants.forEach(function(participant) {
			alert("Already in Room: '" + participant.identity + "'");
			var previewContainer = document.getElementById('remote-media');
			attachParticipantTracks(participant, previewContainer);
		  });

		  // When a participant joins, draw their video on screen
		  room.on('participantConnected', function(participant) {
			alert("Joining: '" + participant.identity + "'");
		  });

		  room.on('trackAdded', function(track, participant) {
			alert(participant.identity + " added track: " + track.kind);
			var previewContainer = document.getElementById('remote-media');
			attachTracks([track], previewContainer);
		  });

		  room.on('trackRemoved', function(track, participant) {
			Console.log(participant.identity + " removed track: " + track.kind);
			detachTracks([track]);
		  });

		  // When a participant disconnects, note in log
		  room.on('participantDisconnected', function(participant) {
			Console.log("Participant '" + participant.identity + "' left the room");
			detachParticipantTracks(participant);
		  });

		  // When we are disconnected, stop capturing local video
		  // Also remove media for all remote participants
		  room.on('disconnected', function() {
			Console.log('Left');
			detachParticipantTracks(room.localParticipant);
			room.participants.forEach(detachParticipantTracks);
			activeRoom = null;
			document.getElementById('button-join').style.display = 'inline';
			document.getElementById('button-leave').style.display = 'none';
		  });
		}
	});
});
</script>
